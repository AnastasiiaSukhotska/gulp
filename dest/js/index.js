!function o(s,r,i){function a(n,e){if(!r[n]){if(!s[n]){var t="function"==typeof require&&require;if(!e&&t)return t(n,!0);if(c)return c(n,!0);throw new Error("Cannot find module '"+n+"'")}t=r[n]={exports:{}};s[n][0].call(t.exports,function(e){var t=s[n][1][e];return a(t||e)},t,t.exports,o,s,r,i)}return r[n].exports}for(var c="function"==typeof require&&require,e=0;e<i.length;e++)a(i[e]);return a}({1:[function(e,t,n){const o=e("../models/model_contact");t.exports=class{constructor(e,t){this.selector=e,this.contactService=t,this.onregister=()=>{},document.addEventListener("DOMContentLoaded",()=>{this.init(),this.binds()})}init(){this.container=document.querySelector(this.selector),this.nameInput=this.container.querySelector(".chosen-contact__add-form_name"),this.typeInput=this.container.querySelector("#type"),this.valueInput=this.container.querySelector(".chosen-contact__add-form_value"),this.button=this.container.querySelector("button")}binds(){this.button.addEventListener("click",()=>{this.addContact()})}addContact(){let e=new o(this.typeInput.value,this.nameInput.value,this.valueInput.value);""!==e.name.trim()&&""!==e.value.trim()?this.contactService.addContact(e).then(e=>{"error"==e.status?this.addContactError(e.error):this.successAddContact()}):alert("Fill form")}addContactError(e){alert(e)}successAddContact(){this.clearForm(),alert("Contact added!"),this.onregister()}clearForm(){this.nameInput.value="",this.typeInput.value="",this.valueInput.value=""}}},{"../models/model_contact":5}],2:[function(e,t,n){const o=e("../models/model_user");t.exports=class{constructor(e,t,n){this.selector=e,this.userService=t,this.onregister=()=>{},document.addEventListener("DOMContentLoaded",()=>{this.init(),this.binds()})}init(){this.container=document.querySelector(this.selector),this.loginInput=this.container.querySelector("#login_user_login"),this.passwordInput=this.container.querySelector("#login_user_password"),this.button=this.container.querySelector(".btn_login")}binds(){this.button.addEventListener("click",()=>this.login())}login(){let e=new o(this.loginInput.value,null,this.passwordInput.value);""!==e.password.trim()&&""!==e.login.trim?this.userService.login(e).then(e=>{if("error"==e.status)this.loginError(e.error);else if(null!==e.token)return this.userService.token=e.token,this.successLogin(),this.userService.token}):alert("Fill form")}loginError(e){alert(e)}successLogin(){this.clearForm(),this.hide(),this.onregister()}clearForm(){this.passwordInput.value="",this.loginInput.value=""}hide(){let e=document.querySelector(".unauthorized-screen");e.style.display="none";let t=document.querySelector(".autorized-screen");t.style.display="flex"}}},{"../models/model_user":6}],3:[function(e,t,n){const o=e("../models/model_user");t.exports=class{constructor(e,t){this.selector=e,this.userService=t,this.onregister=()=>{},document.addEventListener("DOMContentLoaded",()=>{this.init(),this.binds()})}init(){this.container=document.querySelector(this.selector),this.loginInput=this.container.querySelector("#login_user_login"),this.bornInput=this.container.querySelector("#login_user_born"),this.passwordInput=this.container.querySelector("#login_user_password"),this.button=this.container.querySelector("button")}binds(){this.button.addEventListener("click",()=>this.register())}register(){var e=new o(this.loginInput.value,this.bornInput.value,this.passwordInput.value);this.userService.register(e).then(e=>{"error"==e.status?this.registerError(e.error):this.successRegister()})}registerError(e){alert(e)}successRegister(){this.clearForm(),alert("You are registered!"),this.onregister()}clearForm(){this.passwordInput.value="",this.loginInput.value="",this.bornInput.value=""}}},{"../models/model_user":6}],4:[function(e,t,n){let o;e("./models/model_user");const s=e("./models/model_contact"),r=e("./services/user_services");var i=new r;const a=e("./services/contacts_services");let c=new a(i);const l=e("./components/register_form");new l(".register-form",i);const u=e("./components/login_form");let d=new u(".login_form",i);d.onregister=()=>{p()};const h=e("./components/add_contact_form");let m=new h(".chosen-contact__add-form",c);function p(){let e=document.querySelector(".name-list");e.innerHTML="",o=c.getAllContacts().then(e=>e.map(e=>s.createContactName(e))).then(e=>e.map((e,t)=>function(e,t){let n=document.createElement("div");return n.classList.add("name-list__name-element"),n.dataset.index=t,n.dataset.name=e.name,n.dataset.value=e.value,n.append(e.name),n}(e,t))).then(e=>e.forEach(e=>function(e){let t=document.querySelector(".name-list");t.append(e)}(e))),e.addEventListener("click",e=>{var t;e.target.matches(".name-list__name-element")&&(e.target.dataset.index,t=e.target.dataset.name,e=e.target.dataset.value,c.findContact(t,e).then(e=>e.map(e=>function(e){let t=document.querySelector(".chosen-contact__information"),n=document.createElement("div");t.innerHTML="",n.classList.add("chosen-contact__information-elements");let o=document.createElement("div");o.classList.add("chosen-contact__information_name");let s=document.createElement("div");s.classList.add("chosen-contact__information_type");let r=document.createElement("div");return r.classList.add("chosen-contact__information_value"),o.append("Name: "+e.name),s.append("Type: "+e.type),r.append("Value: "+e.value),n.append(o),n.append(s),n.append(r),t.prepend(n),n.style.display="flex",n}(e))))})}m.onregister=()=>{p()}},{"./components/add_contact_form":1,"./components/login_form":2,"./components/register_form":3,"./models/model_contact":5,"./models/model_user":6,"./services/contacts_services":7,"./services/user_services":8}],5:[function(e,t,n){let o={};t.exports=class s{constructor(e,t,n,o){this.type=e,this.name=t,this.value=n,this.id=o}static createContact(e){return new s(e.type,e.name,e.value,e.id)}static createContactName(e){return o={name:e.name,value:e.value}}}},{}],6:[function(e,t,n){t.exports=class o{constructor(e,t,n){this.login=e,this.bornDate=t,this.password=n}static create(e){return new o(e.login,e.date_born,null)}}},{}],7:[function(e,t,n){const o=e("../models/model_contact");class s{constructor(e){this.userService=e}getAllContacts(){return fetch(s.BASE_URL+"contacts",{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:"Bearer "+this.userService.token}}).then(e=>e.json()).then(e=>e.contacts).then(e=>e.map(e=>o.createContact(e)))}findContact(e,t){return fetch(s.BASE_URL+"contacts/find",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:"Bearer "+this.userService.token},body:JSON.stringify({name:e,value:t})}).then(e=>e.json()).then(e=>e.contacts).then(e=>e.map(e=>o.createContact(e)))}addContact(e){return fetch(s.BASE_URL+"contacts/add",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:"Bearer "+this.userService.token},body:JSON.stringify({value:e.value,name:e.name,type:e.type})})}}s.BASE_URL="https://mag-contacts-api.herokuapp.com/",t.exports=s},{"../models/model_contact":5}],8:[function(e,t,n){const o=e("../models/model_user");class s{constructor(e,t){this.userModel=e,this.token=null}getAll(){return fetch(s.BASE_URL+"users").then(e=>e.json()).then(e=>e.users).then(e=>e.map(e=>o.create(e)))}register(e){return fetch(s.BASE_URL+"register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({login:e.login,password:e.password,date_born:e.bornDate})}).then(e=>e.json())}login(e){return fetch(s.BASE_URL+"login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({login:e.login,password:e.password})}).then(e=>e.json())}}s.BASE_URL="https://mag-contacts-api.herokuapp.com/",t.exports=s},{"../models/model_user":6}]},{},[4]);